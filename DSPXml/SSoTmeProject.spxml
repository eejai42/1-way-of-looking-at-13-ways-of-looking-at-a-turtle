<_x0031_3-ways-of-looking-at-a-turtle><SSoTmeProjectId>acbb94fd-5901-4043-8afb-3c9ea0ae204f</SSoTmeProjectId><Name>13-ways-of-looking-at-a-turtle</Name><RootPath>C:\Development\13-ways-of-looking-at-a-turtle</RootPath><ProjectTranspilers><MatchedTranspiler><TranspilerId>d4c9b6b7-e40b-44d6-9550-86ef55cd9623</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>UrlToFile</Name><DisplayName>Url To File</DisplayName><Description>Similar to curl, this command will perform a web request and return the resulting html as a filename</Description><CreatedOn>2017-06-01T19:43:25.853</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>urltofile</LowerName><UpperName>URLTOFILE</UpperName><LowerHyphenName>url-to-file</LowerHyphenName><ReadMeMD>This is helpful for pulling any resource from the internet into a local SSoTme build process.</ReadMeMD><InputDescriptionMD>A url to an online resources.  At the moment this needs to be a "public" resource - but down the road, there is no reason this tool can't be improved to handle many different resources types (simple auth, google, facebook, api, dropbox, etc).</InputDescriptionMD><OutputDescriptionMD>A local file (or potentially file-set) - downloaded from the URL provided.</OutputDescriptionMD><ExampleMD>ssotme url-to-file https://my-domain.com/some-data.abc</ExampleMD><InputFileTypeId>c24610e6-488d-4093-a318-c9fcf855cb56</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>1383</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>e9d09212-477a-4921-bd50-a06bb0531b4e</TranspilerVersionId><TranspilerId>d4c9b6b7-e40b-44d6-9550-86ef55cd9623</TranspilerId><Name>v1</Name><CreatedOn>2017-06-01T19:43:32.353</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents></inputFileContents><transpiler>url-to-file</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>url-to-file https://docs.google.com/spreadsheets/d/1kjyb0JGswSufELAKuy5jtuhs6I0ZyvY9Zwa5Nei6aAo/export?format=xlsx -o twolaat.xlsx binary</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>b0a597e8-405a-491c-9ffa-bdc106a2ea8d</FileSetId></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>648a9e0a-9fdb-4ac9-9bd9-ccc7f6d7a03d</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx</OriginalRelativePath><RelativePath>twolaat.xlsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><output>twolaat.xlsx</output><account></account><parameters>param1=https://docs.google.com/spreadsheets/d/1kjyb0JGswSufELAKuy5jtuhs6I0ZyvY9Zwa5Nei6aAo/export?format=xlsx</parameters><parameters>param2=binary</parameters><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>2d2a2130-2685-473e-b58f-96d0044ff852</ProjectTranspilerId><Name>UrlToFile</Name><RelativePath>/SSoT</RelativePath><CommandLine>url-to-file https://docs.google.com/spreadsheets/d/1kjyb0JGswSufELAKuy5jtuhs6I0ZyvY9Zwa5Nei6aAo/export?format=xlsx -o twolaat.xlsx binary</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>c49c2224-82c9-404f-bb8e-51c482d97db5</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XlsxToXml</Name><DisplayName>Xlsx To Xml</DisplayName><Description>Converts an Xlsx file into a single Xml file.</Description><CreatedOn>2017-10-06T16:52:05.873</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xlsxtoxml</LowerName><UpperName>XLSXTOXML</UpperName><LowerHyphenName>xlsx-to-xml</LowerHyphenName><ReadMeMD>First - the Xlsx file is passed to the Xlsx-to-csv converter.  This creates N CSV Files.  Each of these CSV files is passed to the Csv-To-Xml tool, which creates an xml file from the CSV, where the element names in the Xml are inferred from the names of the columns in the CSV data.

Once the Xml files have been produced, they are concatenated together into a single, Xml file that has ever value from the Xlsx file, but now in a "queriable" format.</ReadMeMD><InputFileTypeId>39d3bcd1-d89f-4361-a3f7-7d5c295132cd</InputFileTypeId><OutputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</OutputFileTypeId><UsageCount>96</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>79286eb3-21ed-4047-b2c9-bcfcfee794a9</TranspilerVersionId><TranspilerId>c49c2224-82c9-404f-bb8e-51c482d97db5</TranspilerId><Name>v1</Name><CreatedOn>2017-10-06T16:52:11.62</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xlsx-to-xml</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xlsx-to-xml -i .\twolaat.xlsx -o twolaat.xml</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>a0bf067a-4180-4078-99c6-74a93a6b0cb2</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx</OriginalRelativePath><RelativePath>twolaat.xlsx</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>0216a288-a2d0-4d92-ac91-7ff2b97b4457</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/./twolaat.xlsx.xml</OriginalRelativePath><RelativePath>.\twolaat.xlsx.xml</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>.\twolaat.xlsx</input><output>twolaat.xml</output><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>926f2418-0cdf-4a30-bf8f-2e84f233fcb0</ProjectTranspilerId><Name>XlsxToXml</Name><RelativePath>/SSoT</RelativePath><CommandLine>xlsx-to-xml -i .\twolaat.xlsx -o twolaat.xml</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>42efdc17-820e-466a-ad70-8fb75d8359be</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XlsxToJson</Name><DisplayName>Xlsx To Json</DisplayName><Description>Converts an Xlsx file into a single Json file.</Description><CreatedOn>2017-10-06T16:52:09.16</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-jWBa32Jd3OAy32tcP7I0iA</CurrentRoutingKey><LowerName>xlsxtojson</LowerName><UpperName>XLSXTOJSON</UpperName><LowerHyphenName>xlsx-to-json</LowerHyphenName><ReadMeMD>This is actually the result of converting the Xml produced by the Xlsx-to-xml tool</ReadMeMD><InputFileTypeId>39d3bcd1-d89f-4361-a3f7-7d5c295132cd</InputFileTypeId><OutputFileTypeId>e827499f-f215-4b35-8dae-6bd423a75e4c</OutputFileTypeId><UsageCount>107</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>b619245a-c244-44fe-af3d-d68ff4d28dd6</TranspilerVersionId><TranspilerId>42efdc17-820e-466a-ad70-8fb75d8359be</TranspilerId><Name>v1</Name><CreatedOn>2017-10-06T16:52:11.62</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xlsx-to-json</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xlsx-to-json -i .\twolaat.xlsx -o twolaat.json</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>222af738-59b3-41f7-8dbd-56a6a64d5bdb</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx</OriginalRelativePath><RelativePath>twolaat.xlsx</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>c954d7b2-d4ab-4b88-9efb-240553b9e192</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.json</OriginalRelativePath><RelativePath>twolaat.json</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>.\twolaat.xlsx</input><output>twolaat.json</output><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>c5fb7ada-2421-4c48-babf-84521e33a911</ProjectTranspilerId><Name>XlsxToJson</Name><RelativePath>/SSoT</RelativePath><CommandLine>xlsx-to-json -i .\twolaat.xlsx -o twolaat.json</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\SSoT\twolaat.xlsx.xml -i CreateBaseClassTools.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>6e37863c-afe2-40f2-b92e-297693750554</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/CreateBaseClassTools.xslt</OriginalRelativePath><RelativePath>CreateBaseClassTools.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>798aa2a2-6fa5-4296-96bf-45292fb6c620</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W01/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W01/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W02/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W02/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W03/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W03/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W04/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W04/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W05/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W05/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W06/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W06/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W06/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W06/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W07/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W07/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W07/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W07/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W08/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W08/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W09/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W09/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W10/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W10/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W11/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W11/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W12/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W12/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W13/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W13/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W13/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W13/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W14/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W14/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W15/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>W15/CreateBaseClass.xslt</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClassTools.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>7e54c021-4f8b-45a0-89f3-d4f206feca0e</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses</RelativePath><CommandLine>xml-xslt-transform -i ..\SSoT\twolaat.xlsx.xml -i CreateBaseClassTools.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>72eec5e7-8f07-4221-9e87-63b40f7d9315</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W01/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>b4456756-5845-4727-bfc3-3e50c8e65a65</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W01/../W01Base.fsx</OriginalRelativePath><RelativePath>../W01Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>a7c7e399-0325-4204-908c-fd9aa6bfaa2c</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W01</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>e09aea8f-54c6-4184-8fab-f0b9d9f6e009</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W02/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>96afa85a-b860-4ddd-893a-a47ff1b90346</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W02/../W02Base.fsx</OriginalRelativePath><RelativePath>../W02Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>8eccfa2e-28d6-4a1a-8a14-5704b69245a0</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W02</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>ece85c0a-ff6e-449d-a9ce-4071f519bdd7</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W03/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>53eac862-65fa-4636-b07e-2d537c37fb57</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W03/../W03Base.fsx</OriginalRelativePath><RelativePath>../W03Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>94272a63-5eb9-4ffc-8f22-286f2b81e7f1</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W03</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>f01771a1-e7f2-4375-948d-4fca149c1778</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W04/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>1c0279b5-79ea-4306-b86e-061e622e2f63</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W04/../W04Base.fsx</OriginalRelativePath><RelativePath>../W04Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>9eb6d31a-da45-40c1-9b79-df10172057b3</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W04</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>68b2a305-7034-4663-ad20-542a6a37542d</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W05/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>f68cd5ba-65d2-4ece-b560-0ad78e430b8b</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W05/../W05Base.fsx</OriginalRelativePath><RelativePath>../W05Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>74de8e3f-1e6d-4ad9-bef9-dd8ad8044501</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W05</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>68148386-8855-4a5e-b8fc-25fb4384ac59</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W06/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>5e8d77f8-11f7-4b5a-a642-71e6cba2e296</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W06/../W06Base.fsx</OriginalRelativePath><RelativePath>../W06Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>2a9e1ef8-0f46-4ebf-b338-cdbd0af567e0</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W06</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>f6fb69b6-af98-47a2-99c3-5111bd9bd623</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W07/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>96c494ea-b58d-44a5-b300-581348cb377f</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W07/../W07Base.fsx</OriginalRelativePath><RelativePath>../W07Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>3b71f04a-cf3d-422d-8e96-d3b366492232</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W07</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>da95a707-ee56-4670-9602-559df2b00a41</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W08/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>6b71cc70-fe12-435e-87ce-7ead60225621</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W08/../W08Base.fsx</OriginalRelativePath><RelativePath>../W08Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>e1a51146-f5b0-48e1-8e77-28b86d54da61</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W08</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>eb4d70d5-0b07-4d7d-9547-02d46dc67460</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W09/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>cac572fc-1e00-4ba6-bef3-ebe743ee068a</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W09/../W09Base.fsx</OriginalRelativePath><RelativePath>../W09Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>51089fdc-d607-4484-b8ce-2bd72642792c</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W09</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>ee94b8e8-17c0-497a-87b3-e99e41a99706</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W10/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>94d2e437-a1fe-4453-b381-03b5259c45b4</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W10/../W10Base.fsx</OriginalRelativePath><RelativePath>../W10Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>3445deae-d395-4e7b-806f-2f9e9ba77363</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W10</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>19ee3500-f1d1-45c3-a1a2-6e2da4f55333</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W11/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>dbbd94cc-115e-4ebd-864a-6f41515ba591</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W11/../W11Base.fsx</OriginalRelativePath><RelativePath>../W11Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>ff3a1656-89ec-424e-85af-80bedeb81676</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W11</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>5eed2fd6-7d56-48ab-a513-d767258a7f87</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W12/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>3b914747-f600-45b5-a557-65269fdf2905</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W12/../W12Base.fsx</OriginalRelativePath><RelativePath>../W12Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>9f78695b-550b-4ff0-b3be-0eb9bd86856d</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W12</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers><ProjectTranspilers><MatchedTranspiler><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><AccountHolderId>1e876e4f-d63b-4698-bd68-3bc27876e41e</AccountHolderId><Name>XmlXsltTransform</Name><DisplayName>Xml Xslt Transform</DisplayName><Description>Given an Xml and Xslt file, will process and "split" a resulting fileset.</Description><CreatedOn>2017-08-30T15:45:09.907</CreatedOn><IsActive>true</IsActive><CurrentRoutingKey>amq.gen-pwRUdyqwEq8fPN8gkK7ADg</CurrentRoutingKey><LowerName>xmlxslttransform</LowerName><UpperName>XMLXSLTTRANSFORM</UpperName><LowerHyphenName>xml-xslt-transform</LowerHyphenName><ReadMeMD>The tool processes the first text file it finds (which is presumed to be in xml format), with the first Xslt file provided, and includes any parameters that are passed to ssotme as well.

The output is expected to be a FileSet Xml blob with the results of the transform.</ReadMeMD><InputDescriptionMD>At least 1 input Xml file, An Xslt file to use for the Transform operation and any additional parameters that the Xslt file uses for it's transpiling functionality.  These could be options, values, namespaces, etc.</InputDescriptionMD><OutputDescriptionMD>A fileset with the result of the Xslt transform, usually including at least 1 or more files.  The example command might produce an HTML Document that describes (in english) the contents of the Xml file.  Essentially a "report" about the xml file. </OutputDescriptionMD><ExampleMD>ssotme -install xml-xslt-transform -i MyData.xml -i CreateDocs.xslt</ExampleMD><InputFileTypeId>f1b92a2a-3f83-4000-9b37-57f920e14419</InputFileTypeId><OutputFileTypeId>952e47eb-3448-4627-8dc4-93dab494c957</OutputFileTypeId><UsageCount>2160</UsageCount><Category>type-conversion</Category><IsRecommended>true</IsRecommended><TranspilerVersions><TranspilerVersionId>7e941388-752b-4b0f-9631-939b790be10f</TranspilerVersionId><TranspilerId>4b713f03-1d9f-42f2-b02f-e3cdbd237bb3</TranspilerId><Name>v1</Name><CreatedOn>2017-08-30T15:45:10.653</CreatedOn><IsActive>true</IsActive></TranspilerVersions></MatchedTranspiler><CLIHandler><inputFileContents /><transpiler>xml-xslt-transform</transpiler><inputFileSetXml></inputFileSetXml><args /><commandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</commandLine><AccountHolder /><CoordinatorProxy /><FileSet><FileSetId>5d70bf4a-7801-4155-8289-6a76ca3e6237</FileSetId><FileSetFiles><OriginalRelativePath>/SSoT/twolaat.xlsx.xml</OriginalRelativePath><RelativePath>twolaat.xlsx.xml</RelativePath></FileSetFiles><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W13/CreateBaseClass.xslt</OriginalRelativePath><RelativePath>CreateBaseClass.xslt</RelativePath></FileSetFiles></FileSet><HasRemainingArguments>true</HasRemainingArguments><ZFSFileSetFile /><SSoTmeProject /><ParseResult>0</ParseResult><OutputFileSet><FileSetId>ea00bdfe-e653-41da-a4c9-db0782961556</FileSetId><FileSetFiles><OriginalRelativePath>/DerivedBaseClasses/W13/../W13Base.fsx</OriginalRelativePath><RelativePath>../W13Base.fsx</RelativePath><AlwaysOverwrite>true</AlwaysOverwrite></FileSetFiles></OutputFileSet><SuppressTranspile>false</SuppressTranspile><help>false</help><init>false</init><install>false</install><uninstall>false</uninstall><build>false</build><buildAll>false</buildAll><describe>false</describe><descibeAll>false</descibeAll><input>..\..\SSoT\twolaat.xlsx.xml</input><input>CreateBaseClass.xslt</input><output /><account></account><listSettings>false</listSettings><keyFile /><emailAddress /><secret /><waitTimeout>30000</waitTimeout><clean>false</clean><cleanAll>false</cleanAll><skipClean>false</skipClean><runAs /><preserveZFS>false</preserveZFS><checkResults>false</checkResults><createDocs>false</createDocs><execute /><includeDisabled>false</includeDisabled></CLIHandler><ProjectTranspilerId>76843967-b873-444d-be30-88b176fc2a63</ProjectTranspilerId><Name>XmlXsltTransform</Name><RelativePath>/DerivedBaseClasses/W13</RelativePath><CommandLine>xml-xslt-transform -i ..\..\SSoT\twolaat.xlsx.xml -i CreateBaseClass.xslt</CommandLine></ProjectTranspilers></_x0031_3-ways-of-looking-at-a-turtle>